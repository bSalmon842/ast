/////////////////////////////////////
08APR2022

- Added zLayer to Push functions, which allows entries with the same z coord to be sorted in front or behind one another
- Added particle count to Emitter and InitialiseEmitter to change how many particles an Emitter can output at once
- Moved values in the Emitter relating to universal start and end progression out to EmitterProgressionInfo
- Added basic particle collision with enities which is enabled through the emitter
/////////////////////////////////////
07APR2022

- Removed EmitterShapeType and replaced with EmitterShapeInfo, which holds any info regarding the shape of the emission
- Added base to EmitterShapeInfo to accomodate cylinder shape emissions
- Added initial and end colours to Emitter to allow particles to colour lerp
- Got rid of Bubble Sort, Render Entries now sort themselves at push-time
- Added sortZ and entrySize to RenderEntry_Header to help sorting
- Particle Simulation is now handled by PARTICLE_SIM functions held by the emitter
- Fixed some errors when AST_INTERNAL == 0
/////////////////////////////////////
06APR2022

- Removed RenderGroup struct, moved worldToPixelConversion to Camera
- worldToPixelConversion is now held and passed by the Camera to Push functions
- Removed the render TempMemory from UpdateRender due to it not being used
- Added Camera Mode functions for Perspective and Orthograpic rendering
- Fixed issue in Render Entry sorting where Clears were being placed after other entries
- Fixed Bubble Sort order
- Added basic Particle system with Particle and Emitter structs with radial emission
/////////////////////////////////////
05APR2022

- Added Unprojection to camera functions
- Added camera bounds displaying with debug_regions
- Added debug camera movement mode
- Made collision be ignored if entities are on different z coords
- Added Bubble Sort for Render Entries
- Change worldToPixelConversion to be more static and based on aspect ratio rather than calculated according to resolution
- Added World struct with dims being replaced by rect area and concept of a configurable world border (ast_world.*)
- Refactored everything using worldDims to use new World struct
- Changed MoveEntity to check position in World to know when to loop or stop
- Removed Entity::loop
/////////////////////////////////////
04APR2022

- Pulled camera settings out into it's own struct and implemented relevant functions (struct Camera, ast_camera.cpp)
- Fixed issue where the z of each entity was being reset to 0
- Added AdjustWindowRect before CreateWindow to get proper client area size
/////////////////////////////////////